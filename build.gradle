apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

sourceCompatibility = 1.8
version = '0.1'

def warFile = 'fisher.war'

war {
    archiveName = warFile
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {  
    // Spring Framework         
    compile 'org.springframework:spring-webmvc:4.2.0.RELEASE'
    compile 'org.springframework:spring-aspects:4.2.0.RELEASE'
    compile 'org.springframework:spring-test:4.2.0.RELEASE'
    compile 'org.springframework:spring-jms:4.2.0.RELEASE'
    
    // Elasticsearch
    compile 'org.elasticsearch:elasticsearch:1.6.0'
    compile 'org.springframework.data:spring-data-elasticsearch:1.2.0.RELEASE'
    
    // Amazon SDK
    compile 'com.amazonaws:aws-java-sdk-s3:1.10.1'
    
    // JMS
    compile 'org.apache.activemq:activemq-client:5.11.1'
     
    // Others
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.3'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.3'
    compile 'javax:javaee-web-api:7.0'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0'
    runtime 'org.slf4j:slf4j-log4j12:1.7.12'
    compile 'log4j:log4j:1.2.17'
    compile 'log4j:apache-log4j-extras:1.0'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task remoteShutdownTomcat << {
    exec {
        executable "/usr/bin/ssh"
        args sshTargetHost, "'${sshTargetShutdownScript}'"
    }
}

task remoteStartTomcat << {
    exec {
        executable "/usr/bin/ssh"
        args sshTargetHost, "'${sshTargetStartupScript}'"
    }
}

task remoteDeploy(dependsOn: 'build') << {
    // Copy War file
    exec {
        executable "/usr/bin/scp"
        args "${buildDir}/libs/${warFile}", 
            "${sshTargetHost}:${sshTargetTomcatWebapp}/${warFile}"
    }
}

task testDomainClass(type: Test, dependsOn: testClasses) {
    include 'com/predictry/fisher/domain/**'
}